scheme_abort = {
	scope = character
	saved_scopes = {
		player
	}
    is_shown = {
		employer = scope:player
		OR = {
			has_ambition = scheme_provoke_rival
			has_ambition = scheme_make_friends
			has_ambition = scheme_hold_games
			has_ambition = scheme_invest
			has_ambition = scheme_seek_treatment
			has_ambition = scheme_pitfighting
			has_ambition = scheme_buy_holding
			has_ambition = scheme_influence
			has_ambition = scheme_disloyalty_self
			has_ambition = scheme_disloyalty_other
			has_ambition = scheme_purchase_power_base
			has_ambition = scheme_seek_patron
			has_ambition = scheme_ruler_invest
			has_ambition = scheme_governor_extort
			has_ambition = scheme_ruler_legitimacy
			has_ambition = scheme_escape_prison
			has_ambition = scheme_demand_office
			has_ambition = scheme_expand_family_estates
			has_ambition = scheme_invest_in_agriculture
			has_ambition = scheme_invest_in_mining
			has_ambition = scheme_hold_religious_festival
			#C3RD
			has_ambition = scheme_care_of_relatives
			#Invictus schemes
			has_ambition = scheme_ruler_popularity
			has_ambition = scheme_ruler_corruption
			has_ambition = scheme_convert_pops_in_holding
			has_ambition = scheme_assimilate_pops_in_holding
			has_ambition = scheme_invest_in_port
			has_ambition = scheme_exploit_populous
			has_ambition = scheme_increase_statesmenship
			AND = { #In a Republic we cannot stop anyone from marrying
				employer = {
					OR = {
						is_monarchy = yes
						is_tribal = yes
					}
				}
				has_ambition = scheme_seek_a_spouse
			}
			AND = {
				is_ruler = yes
				has_ambition = scheme_assassinate
			}
		}
    }
	ai_is_valid = {
		always = no
	}
    is_valid = {
		trigger_if = {
    		limit = {
    			NOT = { employer = scope:player }
    		}
    		employer = scope:player
    	}
		trigger_if = {
			limit = {
				loyalty < 10
			}
			loyalty >= 10
		}
		trigger_if = {
			limit = {
				has_ambition = scheme_disloyalty_self
			}
			custom_tooltip = {
				text = "scheme_disloyalty_self_always_no_tt"
				NOT = {
					has_ambition = scheme_disloyalty_self
				}
			}
		}
		trigger_if = {
			limit = {
				has_ambition = scheme_escape_prison
			}
			custom_tooltip = {
				text = "scheme_disloyalty_self_always_no_tt"
				NOT = {
					has_ambition = scheme_escape_prison
				}
			}
		}
		trigger_if = {
			limit = {
				OR = {
					has_ambition = scheme_disloyalty_other
					has_ambition = scheme_purchase_power_base
				}
				employer = {
					treasury < 200
				}
			}
			employer = {
				treasury >= 200
			}
		}
		hidden:employer = {
			trigger_if = {
				limit = {
					root = {
						is_ruler = no
					}
					NOT = {
						can_pay_price = price_scheme_abort
					}
				}
				can_pay_price = price_scheme_abort
			}
		}
    }
    effect = {
		if = {
			limit = {
				is_ruler = no
			}
			employer = {
				pay_price = price_scheme_abort
			}
			custom_tooltip = "newline_tt"
			add_loyalty = scheme_dismissed_l
		}
		if = {
			limit = {
				OR = {
					has_ambition = scheme_disloyalty_other
					has_ambition = scheme_purchase_power_base
				}
			}
			employer = {
				add_treasury = -200
			}
			add_gold = 200
		}
		clear_ambition_effect = yes
    }
}