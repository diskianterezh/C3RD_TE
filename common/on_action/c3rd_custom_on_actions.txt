
c3rd_custom_on_actions_instability = {
	trigger = {
		current_date > 900.1.1
		num_of_cities >= 1
		NOT = {
			tag = BAR
		}
	}
	events = {
		low_stab_event.1
	}
}

c3rd_custom_on_actions_low_stab_event = {

	trigger = {
        
        has_country_modifier = internal_collapse
        NOT = {
            stability >= 25
        }

    }
	random_events = {
		60 = 0
        15 = low_stab_event.4
		20 = low_stab_event.7
        1 = low_stab_event.3
	}
}

c3rd_custom_on_actions_subject_leaving = {
	trigger = {
		current_date > 900.1.1
		num_of_cities >= 1
		NOT = {
			tag = BAR
		}
		
	}
	events = {
		c3rd_events.1
	}
}

c3rd_custom_on_actions_third_century = {
	trigger = {
		current_date > 900.1.1
		num_of_cities >= 1
		NOT = {
			tag = BAR
		}
		
	}
	events = {
		c3rd_events.2
	}
	
	random_events = {
		500 = 0
		100 = tribal_flavour_events.41
	}
}

c3rd_custom_on_actions_rival_empire_opinion = {
	trigger = {
		has_variable = mother_empire
		has_variable = unification_value
		var:mother_empire = {
			has_land = yes
		}
	}
	effect = {
		if = {
			limit = {
				opinion = {
					target = var:mother_empire
					value >= 100
				}
			}
			change_variable = {
				name = unification_value
				add = 3
			}
		}
		else_if = {
			limit = {
				opinion = {
					target = var:mother_empire
					value >= 0
				}
			}
			change_variable = {
				name = unification_value
				add = 1
			}
		}
		else_if = {
			limit = {
				opinion = {
					target = var:mother_empire
					value <= -100
				}
			}
			change_variable = {
				name = unification_value
				subtract = 5
			}
		}
		else_if = {
			limit = {
				opinion = {
					target = var:mother_empire
					value <= 0
				}
			}
			change_variable = {
				name = unification_value
				subtract = 2
			}
		}
		if = {
			limit = { 
				num_of_provinces >= var:mother_empire.num_of_provinces
			}
			change_variable = {
				name = unification_value
				subtract = 3
			}
		}
	}
}

c3rd_custom_on_actions_rival_empire_civil_war = {
	trigger = {
		has_variable = mother_empire
		has_variable = unification_value
		NOT = {has_variable = civil_war_help}
		NOT = {war_with = var:mother_empire}
		var:mother_empire = {
			has_land = yes
		}
		towards_civil_war = yes
	}

	effect = {
		save_scope_as = rival_empire
		random_list = {
			80 = {
			}
			20 = {
				set_variable = {
					name = civil_war_help
					days = 730 #2years
				}
				var:mother_empire = {
					trigger_event = {
						id = c3rd_events.15
						days = 5
					}
				}
			}
		}
	}
}


c3rd_custom_on_actions_rival_empire_in_war = {
	trigger = {
		has_variable = mother_empire
		has_variable = unification_value
		NOT = {has_variable = war_aid_asked}
		var:mother_empire = {
			has_land = yes
		}
		NOT = {war_with = var:mother_empire}
		any_current_war = {
			NOT = {
				any_war_participant = {
					this = var:mother_empire
				}
			}
			war_score = {
                target = root
                value <= -30
			}
		}
	}

	effect = {
		save_scope_as = rival_empire
		random_current_war = {
			limit = {
				NOT = {
					any_war_participant = {
						this = var:mother_empire
					}
				}
				war_score = {
					target = root
					value <= -30
				}
			}
			save_scope_as = rival_empire_war
		}
		random_list = {
			70 = {
			}
			30 = {
				set_variable = {
					name = war_aid_asked
					days = 1825 #5years
				}
				var:mother_empire = {
					trigger_event = {
						id = c3rd_events.16
						days = 7
					}
				}
			}
		}
	}
}


c3rd_custom_on_actions_rival_unstable = {
	trigger = {
		has_variable = mother_empire
		has_variable = unification_value
		NOT = {has_variable = stab_asked}
		var:mother_empire = {
			has_land = yes
		}
		NOT = {war_with = var:mother_empire}
		stability < 20
	}

	effect = {
		save_scope_as = rival_empire
		random_list = {
			80 = {
			}
			20 = {
				modifier = {
					add = 25
					stability < 10
				}
				set_variable = {
					name = stab_asked
					days = 730 #2years
				}
				var:mother_empire = {
					trigger_event = {
						id = c3rd_events.17
						days = 9
					}
				}
			}
		}
	}
}

c3rd_custom_on_actions_rival_legitimate = {
	trigger = {
		has_variable = mother_empire
		has_variable = unification_value
		NOT = {has_variable = legitimy_problem}
		var:mother_empire = {
			has_land = yes
		}
		NOT = {war_with = var:mother_empire}
		legitimacy < 30
	}

	effect = {
		save_scope_as = rival_empire
		random_list = {
			90 = {
			}
			10 = {
				modifier = {
					add = 15
					legitimacy < 0
				}
				set_variable = {
					name = legitimy_problem
					days = 3650 #10years
				}
				var:mother_empire = {
					trigger_event = {
						id = c3rd_events.18
						days = 11
					}
				}
			}
		}
	}
}

c3rd_events_monthly_pulse = { #check if people in country can fuck shit up
	trigger = {
		num_of_cities >= 1
		NOR = {
			tag = REB
			tag = BAR
		}
		has_country_modifier = crisis_of_the_third_century
	}
	effect = {
		if = {
			limit = { #enrich the generals
				has_country_modifier = military_anarchy 
				any_character = {
					is_general = yes
					wealth < 1000
					any_friend = {
						wealth >= 100
					}
					popularity >= 40

				}
			}
			random_character = {
				limit = {
					is_general = yes
					wealth < 1000
					any_friend = {
						wealth >= 100
					}
					any_friend = {
						wealth >= 100
					}
					popularity >= 40
					
				}
				save_temporary_scope_as = give_me_gold
				every_friend = {
					limit = {
						wealth >= 100
					}
					add_gold = -100
					prev = {
						add_gold = 100
					}
				}
			}

			
		}
	}
	random_events = {
		500 = 0
		40 = c3rd_events.30 #military coup *3 civilwar *2low leg
		50 = c3rd_events.5 #general intervention *3 civilwar *2neg leg *2 dislgen
		10 = c3rd_events.32 #kingmaker emprison rival
		15 = c3rd_events.33 #general glose
		20 = c3rd_events.34 #general rivalry
		25 = c3rd_events.35 #general ask his friend governor
		20 = c3rd_events.36 #general new king maker
		20 = c3rd_events.37 #king maker clash
		7 = c3rd_events.7 #generals asking for war
		20 = c3rd_events.8 #generals asking for law
		20 = c3rd_events.81 #only general take some powa
		20 = c3rd_events.45 #republican leader push reforms
		50 = c3rd_events.39 #kingmaker no office
		5 = c3rd_events.48 #Republic above 1000 territories
		40 = c3rd_events.21 #governor defect to rival
	}
	
}

c3rd_other_events_monthly_pulse = { #check if events can happen
	trigger = {
		num_of_cities >= 1
		NOR = {
			tag = REB
			tag = BAR
		}
	}
	random_events = {
		500 = 0
		20 = c3rd_other_events.4 #too few nobles culture pop
		20 = c3rd_other_events.8 #powerful characters asking to stop the tax controls
		5 = c3rd_other_events.9 #powerful characters asking for census
		5 = c3rd_other_events.12 #games
		3 = c3rd_other_events.30 #slave culture revolt
		20 = c3rd_other_events.31 #slave culture uprising
		30 = c3rd_other_events.50 #wonder threatened
		5 = c3rd_other_events.52 #stabhit from wonders pillaged
		4 = c3rd_other_events.60 #stabhit from barbarians
		5 = c3rd_other_events.70 #aristocratic reforms
		4 = c3rd_other_events.71 #revolt of the freemen against inflation
		5 = c3rd_other_events.72 #act against silver crash
		7 = c3rd_other_events.73 #rpeople trying to escape taxes
		2 = c3rd_other_events.74 #Decuriones fleeing
		2 = c3rd_other_events.84 #nobles escaping tax through land
		8 = c3rd_other_events.90 #political character doing his things
		15 = c3rd_other_events.91 #coup from political character
	}
}

c3rd_culture_noble_assimilation = {
	effect = {
		every_country_culture = {
			limit = {
				NOT = {this.culture = root.culture}
				has_pop_type_right = nobles
			}
			save_scope_as = that_noble_culture
			root = {
				every_owned_province = {
					limit = {
						dominant_province_culture = scope:that_noble_culture.culture
						any_pops_in_province = {
							pop_culture = scope:that_noble_culture.culture
						}
					}
					random_pops_in_province = {
						limit = {
							pop_culture = root.culture 
						}
						set_pop_culture = scope:that_noble_culture.culture
					}

				}
			}
		}
	}

}


c3rd_mines_exhaustion_pulse = {
	trigger = {
		has_land = yes
		current_date >= 750.1.1
	}
	effect = {
		every_owned_province = {
			limit = {
				trade_goods = precious_metals
			}
			random_list = {
				35 = {
					modifier = {
						add = 20
						root = {is_ai = yes}
					}
					modifier = {
						add = 20
						root = {has_law = monetary_reform_law}
					}
					modifier = {
						add = 10
						root.num_of_cities <= 100
					}
				}
				5 = {
					modifier = {
						add = 10
						any_pops_in_province = {
							count >= 15
							pop_type = slaves
						}
					}
					modifier = {
						add = 10
						any_pops_in_province = {
							count >= 30
							pop_type = slaves
						}
					}
					modifier = {
						add = 10
						any_pops_in_province = {
							count >= 45
							pop_type = slaves
						}
					}
					modifier = {
						add = 10
						owner = {
							is_subject = yes
						}
					}
					modifier = {
						add = 15
						any_pops_in_province = {
							count >= 60
							pop_type = slaves
						}
					}
					modifier = {
						add = 15
						has_building = slave_mine_building
					}
					modifier = {
						add = 5
						root = {has_law = basic_monetary_law}
					}
					if = {
						limit = { NOT = {has_variable = mine_exhaustion} }
						set_variable = {
							name = mine_exhaustion
							value = 1
						}
					}
					else_if = {
						limit = {has_variable = mine_exhaustion }
						change_variable = {
							name = mine_exhaustion
							add = 1
						}
					}
				}
			}
		}
	}
}

c3rd_mines_exhaustion_trigger = {
	trigger = {
		has_land = yes
		any_owned_province = {
			trade_goods = precious_metals
			has_variable = mine_exhaustion
			var:mine_exhaustion >= 50
		}
	}
	effect = {
		trigger_event = {
			id = c3rd_other_events.6
		}
	}
}

c3rd_calculate_deflation = {
	trigger = {
		has_land = yes
		is_ai = no
		current_date >= 750.1.1
		NOR = {
			has_country_modifier = solidus_introduced
		}
	}
	effect = {
		if = { #calculation of this year economy
			limit = {
				NOT = {
					has_variable = country_economy
				}
			}
			set_variable = {
				name = country_economy
				value = c3rd_economic_value
			}
		}
		else = { #recalculation
			remove_variable = country_economy
			set_variable = {
				name = country_economy
				value = c3rd_economic_value
			}
		}
		if = { #create the deflation variable if > 500 cities
			limit = {
				NOT = {
					has_variable = deflation_value
				}
				num_of_cities >= 500
			}
			set_variable = {
				name = deflation_value
				value = 0
			}
		}
		if = { #first reduction of the silver unvalue if aurelian
			limit = {
				has_variable = silver_unvalue
				has_law = second_reform_law
				var:silver_unvalue > 0
			}
			change_variable = {
				name = silver_unvalue
				add = -1
			}
		}
		if = { #reduction if bartering
			limit = {
				has_variable = silver_unvalue
				has_country_modifier = bartering_authorised
				var:silver_unvalue > 0
			}
			change_variable = {
				name = silver_unvalue
				add = -1
			}
		}
		if = { #reduction if silv consolidation (solidus)
			limit = {
				has_variable = silver_unvalue
				has_country_modifier = silver_consolidation_sol
				var:silver_unvalue > 0
			}
			change_variable = {
				name = silver_unvalue
				add = -1
			}
		}
		if = { #silver law reduce deflation passively
			limit = {
				has_variable = deflation_value
				has_law = monetary_reform_law
			}
			change_variable = {
				name = deflation_value
				add = -1
			}
		}
		if = { #creation of the silver unvalue variable if >500 cities
			limit = {
				NOT = {
					has_variable = silver_unvalue
				}
				has_law = monetary_reform_law
				num_of_cities >= 500
			}
			set_variable = {
				name = silver_unvalue
				value = 0
			}
		}
		if = { #reduce deflation if economy good
			limit = {
				has_variable = deflation_value
				var:country_economy > 1
				var:deflation_value > 0
			}
			change_variable = {
				name = deflation_value
				add = -1
			}
		}
		if = { #economy very good
			limit = {
				has_variable = deflation_value
				var:country_economy > 2
				var:deflation_value > 0
			}
			change_variable = {
				name = deflation_value
				add = -2
			}
		}
		if = { #veryvery good
			limit = {
				has_variable = deflation_value
				var:country_economy > 4
				var:deflation_value > 0
			}
			change_variable = {
				name = deflation_value
				add = -3
			}
		}
		#increase deflation or silver unvalue, depending of the law - only if cities > 500
		if = { 
			limit = {
				var:country_economy < 1
				num_of_cities >= 500
			}
			if = {
				limit = { NOT = {has_law = monetary_reform_law}} #if you have the monetary reform, you decrease the value of silver
				change_variable = {
					name = deflation_value
					add = 1
				}
			}
			else = {
				change_variable = {
					name = silver_unvalue
					add = 1
				}
			}
		}
		if = {
			limit = {
				var:country_economy < 0.8
				num_of_cities >= 500
			}
			if = {
				limit = { NOT = {has_law = monetary_reform_law}} #if you have the monetary reform, you decrease the value of silver
				change_variable = {
					name = deflation_value
					add = 1
				}
			}
			else = {
				change_variable = {
					name = silver_unvalue
					add = 1
				}
			}
		}
		if = {
			limit = {
				var:country_economy < 0.6
				num_of_cities >= 500
			}
			if = {
				limit = { NOT = {has_law = monetary_reform_law}} #if you have the monetary reform, you decrease the value of silver
				change_variable = {
					name = deflation_value
					add = 1
				}
			}
			else = {
				change_variable = {
					name = silver_unvalue
					add = 1
				}
			}
		}
		if = {
			limit = {
				var:country_economy < 0.4
				num_of_cities >= 500
			}
			if = {
				limit = { NOT = {has_law = monetary_reform_law}} #if you have the monetary reform, you decrease the value of silver
				change_variable = {
					name = deflation_value
					add = 1
				}
			}
			else = {
				change_variable = {
					name = silver_unvalue
					add = 1
				}
			}
		}
		if = { #passive unvalue of silver if silver law
			limit = { 
				has_law = monetary_reform_law
				num_of_cities >= 500
			}
			change_variable = {
				name = silver_unvalue
				add = 1
			}
		}
	}
}
c3rd_aurelien = {
	trigger = {
		has_land = yes
		is_ai = no
		NOT = {
			has_country_modifier = solidus_introduced
		}
	}
	effect = {
		if = {
			limit = { 
				has_law = second_reform_law
				has_variable = silver_unvalue
				var:silver_unvalue > 0
			}
			change_variable = {
				name = silver_unvalue
				add = -1
			}
		}
	}

}

c3rd_economic_warning = {
	trigger = {
		has_land = yes
		is_ai = no
		current_date >= 750.1.1
		has_variable = deflation_value
	}
	effect = {
		if = {
			limit = {
				var:deflation_value >= 5
				NOT = { has_variable = deflation_is_happening} 
			}
			trigger_event = {
				id = c3rd_other_events.5
			}
		}
		if = {
			limit = {
				has_variable = deflation_value
				var:deflation_value <= 0
				has_variable = deflation_is_happening
			}
			trigger_event = {
				id = c3rd_other_events.7
			}
		}
	}




}

c3rd_apply_deflation = { #applying deflation modifiers events
	trigger = {
		has_land = yes
		is_ai = no
		current_date >= 750.1.1
		has_variable = deflation_value
		NOR = {
			has_country_modifier = solidus_introduced
		}
	}
	effect = {
		if = {
			limit = { 
				NOR = {
					has_country_modifier = small_deflation
					has_country_modifier = medium_deflation
					has_country_modifier = high_deflation
				}
				var:deflation_value >= 30
				num_of_cities >= 500
			}
			trigger_event = {
				id = c3rd_other_events.20
			}
		}
		else_if = {
			limit = {
				NOR = {
					has_country_modifier = medium_deflation
					has_country_modifier = high_deflation
				}
				var:deflation_value >= 75
				num_of_cities >= 500
			}
			trigger_event = {
				id = c3rd_other_events.21
			}
		}
		else_if = {
			limit = {
				NOT = {
					has_country_modifier = high_deflation
				}
				var:deflation_value >= 130
				num_of_cities >= 500
			}
			trigger_event = {
				id = c3rd_other_events.22
			}
		}
		else_if = {
			limit = {
				OR = {
					has_country_modifier = small_deflation
					has_country_modifier = medium_deflation
					has_country_modifier = high_deflation
				}
				OR = {
					NOT = {
						has_variable = deflation_value
					}
					var:deflation_value <= 20
				}
			}
			trigger_event = {
				id = c3rd_other_events.25
			}
		}
		else_if = {
			limit = {
				OR = {
					has_country_modifier = medium_deflation
					has_country_modifier = high_deflation
				}
				NOT = {
					has_country_modifier = small_deflation
				}
				var:deflation_value <= 65
			}
			trigger_event = {
				id = c3rd_other_events.24
			}
		}
		else_if = {
			limit = {
				has_country_modifier = high_deflation
				NOT = {
					has_country_modifier = medium_deflation
				}
				var:deflation_value <= 120
			}
			trigger_event = {
				id = c3rd_other_events.23
			}
		}

	}
}

c3rd_apply_silver_unvalue = { #applying silver modifiers events
	trigger = {
		has_land = yes
		is_ai = no
		current_date >= 750.1.1
		has_variable = silver_unvalue
		NOR = {
			has_country_modifier = solidus_introduced
		}
	}
	effect = {
		if = {
			limit = { 
				NOR = {
					has_country_modifier = small_monetary_crash
					has_country_modifier = medium_monetary_crash
					has_country_modifier = high_monetary_crash
				}
				var:silver_unvalue >= 60
				num_of_cities >= 500
			}
			trigger_event = {
				id = c3rd_other_events.26
			}
		}
		else_if = {
			limit = {
				NOR = {
					has_country_modifier = medium_monetary_crash
					has_country_modifier = high_monetary_crash
				}
				var:silver_unvalue >= 95
				num_of_cities >= 500
			}
			trigger_event = {
				id = c3rd_other_events.27
			}
		}
		else_if = {
			limit = {
				NOT = {
					has_country_modifier = high_monetary_crash
				}
				var:silver_unvalue >= 130
				num_of_cities >= 500
			}
			trigger_event = {
				id = c3rd_other_events.28
			}
		}
		else_if = {
			limit = {
				OR = {
					has_country_modifier = medium_monetary_crash
					has_country_modifier = high_monetary_crash
					has_country_modifier = small_monetary_crash
				}
				OR = {
					NOT = {
						has_variable = silver_unvalue
					}
					var:silver_unvalue <= 20
				}
			}
			trigger_event = {
				id = c3rd_other_events.293
			}
		}
		else_if = {
			limit = {
				OR = {
					has_country_modifier = medium_monetary_crash
					has_country_modifier = high_monetary_crash
				}
				NOT = {
					has_country_modifier = small_monetary_crash
				}
				var:silver_unvalue <= 70
			}
			trigger_event = {
				id = c3rd_other_events.292
			}
		}
		else_if = {
			limit = {
				has_country_modifier = high_monetary_crash
				NOT = {
					has_country_modifier = medium_monetary_crash
				}
				var:silver_unvalue <= 100
			}
			trigger_event = {
				id = c3rd_other_events.291
			}
		}

	}
}

c3rd_province_revolt_gain = {
	trigger = {
		has_land = yes
		is_ai = no
		current_date >= 600.1.1
		any_country_culture = {
			is_integrated = no
			has_country_culture_modifier = on_going_revolt
		}
	}
	effect = {
		every_owned_province = {
			limit = {
				NOT = {
					has_province_modifier = revolt_preparation
				}
				save_temporary_scope_as = that_slave_province
				owner = {
					any_country_culture = {
						this.culture = scope:that_slave_province.dominant_province_culture
						has_country_culture_modifier = on_going_revolt
					}
				}
			}
			random_list = {
				15 = {
				}
				1 = {
					modifier = {
						add = 1
						root.stability <= 50
					}
					modifier = {
						add = 1
						root.stability <= 25
					}
					modifier = {
						add = 1
						root.legitimacy <= 50
					}
					modifier = {
						add = 1
						root.legitimacy <= 0
					}
					add_province_modifier = {
						name = revolt_preparation
						duration = 3650
					}
				}
			}
		}
	}

}

c3rd_really_rich_country = {
	trigger = {
		has_land = yes
		current_date >= 600.1.1
	}
	random_events = {
		500 = 0
		50 = c3rd_other_events.40
	}

}

c3rd_no_more_wonder = {
	trigger = {
		has_land = yes
		any_province = {
			has_province_modifier = wonder_destroyed_modifier
			NOT = {
				has_great_work = yes
			}
		}
	}
	effect = {
		every_province = {
			limit = {
				has_province_modifier = wonder_destroyed_modifier
				NOT = {
					has_great_work = yes
				}
			}
			remove_province_modifier = wonder_destroyed_modifier
		}
	}

}

c3rd_barbarian_sack = {
	trigger = {
		has_land = yes
		any_owned_province = {
			is_previous_controller = root
			controller = { tag = BAR }
			is_state_capital = yes
			state = {
				NOT = {
					has_state_modifier = barbarians_border
				}
				any_state_province = {
					count <= 4
					NOT = {
						controller = { tag = BAR }
					}
				}
			}
		}
	}
	effect = {
		every_province = {
			limit = {
				is_previous_controller = root
				controller = { tag = BAR }
				is_state_capital = yes
				state = {
					any_state_province = {
						count <= 4
						NOT = {
							controller = { tag = BAR }
						}
					}
					NOT = {
						has_state_modifier = barbarians_border
					}
				}
			}
			state = {
				add_state_modifier = {
					name = barbarians_border
					duration = 1850
				}
			}
		}
	}

}

c3rd_holding_control = { #governor gain control of region
	trigger = {
		has_land = yes
		OR = {
			NOT = {
				has_law = basic_administrative_law
			}
			has_country_modifier = solidus_introduced
		}
		any_governorships = {
			exists = governor
			governor = {
				is_ruler = no
			}
			save_temporary_scope_as = governorship_tmp_scope
			NOR = {
				AND = {
					has_variable = governorship_owner
					var:governorship_owner = {
						is_head_of_family = yes
						family = scope:governorship_tmp_scope.governor.family
					}
				}
				AND = {
					has_variable = governorship_owner
					var:governorship_owner = governor
				}
			}
			OR = {
				AND = {
					region_control_value >= 30
					root={has_law = decentralized_administration_law}
				}
				AND = {
					region_control_value >= 40
					root={has_country_modifier = solidus_introduced}
				}
				region_control_value >= 50
			}
		}
	}
	effect = {

        random_governorships = {
            limit = {
                exists = governor
                governor = {
                    is_ruler = no
                }
				save_temporary_scope_as = governorship_tmp_scope
                NOR = {
					AND = {
						has_variable = governorship_owner
						var:governorship_owner = {
							is_head_of_family = yes
							family = scope:governorship_tmp_scope.governor.family
						}
					}
					AND = {
						has_variable = governorship_owner
						var:governorship_owner = governor
					}
                }
				OR = {
					AND = {
						region_control_value >= 30
						root={has_law = decentralized_administration_law}
					}
					AND = {
						region_control_value >= 40
						root={has_country_modifier = solidus_introduced}
					}
					region_control_value >= 50
				}
            }
			weight = {
                modifier = {
                    factor = 3
                    region_control_value >= 75
                }
                modifier = {
                    factor = 2
                    region_control_value >= 60
                }
                modifier = {
                    factor = 5
                    region_control_value >= 90
                }
                modifier = { #less chances close to the capital
                    factor = 0.4
                    any_governorship_state = {
                        any_state_province = {
                            region = {
                                any_neighbor_region = {
                                    any_region_province = {
                                        owner = root
                                        is_capital = yes
                                    }
                                }
                            }
                        }
                    }
                }
                modifier = { #more chances near foreign countries
                    factor = 2
                    any_governorship_state = {
                        any_state_province = {
                            any_neighbor_province = {
								NOT = {
									owner = root
								}
							}
                        }
                    }
                }
			}
            save_scope_as = autonomy_governorship
        }
		random_list = {
			9 = {
				modifier = {
					add = 2
					num_of_cities <= 200
				}
			}
			1 = {
				modifier = {
					add = 1
					stability <= 50
				}
				modifier = {
					add = 1
					has_law = decentralized_administration_law
				}
				modifier = {
					add = 1
					has_country_modifier = solidus_introduced
				}
				modifier = {
					add = 1
					scope:autonomy_governorship = {
						region_control_value >= 70
					}
				}
				modifier = {
					add = 1
					scope:autonomy_governorship = {
						region_control_value >= 80
					}
				}
				modifier = {
					add = 2
					scope:autonomy_governorship = {
						region_control_value >= 90
					}
				}
				modifier = {
					add = 1
					num_of_cities >= 500
				}
				modifier = {
					add = 1
					num_of_cities >= 1000
				}
				modifier = {
					add = 1
					num_of_cities >= 2000
				}
				trigger_event = {
					id = c3rd_other_events.80
					days = { 30 360 }
				}
				
			}
		}
	}
}

c3rd_holding_clear = {
	trigger = {
		any_governorships = {
			has_variable = governorship_owner
			var:governorship_owner = {
				OR = {
					is_alive = no
					NOT = {employer = root}
				}
			}
		}
	}
	effect = {
		every_governorships = {
			limit = {
				has_variable = governorship_owner
				var:governorship_owner = {
					OR = {
						is_alive = no
						NOT = {employer = root}
					}
				}
			}
			if = {
				limit = {
					var:governorship_owner = {	
						is_head_of_family = no
						exists = family.head_of_family
						family.head_of_family = {
							employer = root
						}
					}
				}
				var:governorship_owner = {
					family.head_of_family = {
						save_scope_as = ownership_target
					}
				}
				remove_variable = governorship_owner
				set_variable = {
					name = governorship_owner
					value = scope:ownership_target
				}
				calculate_the_gov_ownership = yes
			}
			else = {
				remove_variable = governorship_owner
			}
		}
	}
}

c3rd_country_control_check = {
	trigger = {
		OR = {
			any_governorships = {
				has_variable = governorship_owner
				var:governorship_owner = {
					is_alive = yes
					employer = root
				}
			}
			any_subject = {
				is_subject_type = autonomous_domain
				has_variable = owner_from_another_empire
			}
			any_character = {
				has_variable = country_ownership
			}

		}
	}
	effect = {
		every_character = {
			limit = {
				save_temporary_scope_as = charcheck_tmp
				OR = {
					employer = {
						any_governorships = {
							has_variable = governorship_owner
							var:governorship_owner = scope:charcheck_tmp
						}
					}
					employer = {
						any_subject = {
							has_variable = owner_from_another_empire
							is_subject_type = autonomous_domain
							var:owner_from_another_empire = scope:charcheck_tmp
						}
					}
					has_variable = country_ownership
				}
			}
			recalculate_ownership_char = yes
		}
	}
}

c3rd_country_calculate_the_gov_ownership = {
	trigger = {
		any_governorships = {
			has_variable = governorship_owner
			var:governorship_owner = {
				is_alive = yes
				employer = root
			}
		}
	}
	effect = {
		every_governorships = {
			limit = {
				has_variable = governorship_owner
				var:governorship_owner = {
					is_alive = yes
					employer = root
				}
			}
			calculate_the_gov_ownership = yes
		}
	}
}


c3rd_holding_gain_owner = { #owner gain control in his region
	trigger = {
		has_land = yes
		OR = {
			NOT = {
				has_law = basic_administrative_law
			}
			has_country_modifier = solidus_introduced
		}
		any_governorships = { #check available governorship (thus owner)
			exists = governor
			governor = {
				is_ruler = no
			}
			save_temporary_scope_as = governorship_tmp_scope
			has_variable = governorship_owner
			OR = {
				AND = {
					var:governorship_owner = {
						is_head_of_family = yes
						family = scope:governorship_tmp_scope.governor.family
					}
				}
				var:governorship_owner = governor
			}
			any_governorship_state = {
				any_state_province = {
					NOT = {
						exists = holding_owner
					}
				}
			}
		}
	}
	effect = {

        random_governorships = {
            limit = {
				exists = governor
				governor = {
					is_ruler = no
				}
				save_temporary_scope_as = governorship_tmp_scope
				has_variable = governorship_owner
				OR = {
					AND = {
						var:governorship_owner = {
							is_head_of_family = yes
							family = scope:governorship_tmp_scope.governor.family
						}
					}
					var:governorship_owner = governor
				}
				any_governorship_state = {
					any_state_province = {
						NOT = {
							exists = holding_owner
						}
					}
				}
				var:governorship_owner = {
					wealth >= 100
				}
            }
			weight = { #the richer the best
				modifier = {
					factor = 2
					has_variable = governorship_owner
					var:governorship_owner = {
						wealth >= 500
					}
				}
				modifier = {
					factor = 2
					has_variable = governorship_owner
					var:governorship_owner = {
						wealth >= 2000
					}
				}
				modifier = {
					factor = 2
					has_variable = governorship_owner
					var:governorship_owner = {
						wealth >= 5000
					}
				}
				modifier = {
					factor = 2
					has_variable = governorship_owner
					var:governorship_owner = {
						wealth >= 10000
					}
				}
			}
            save_scope_as = new_holding_governorship
        }
		random_list = { #base 16%; 10% if small up to 66% for wealthy gov with solidus in 1000+ country ,max 88%
			5 = {
				modifier = {
					add = 4
					num_of_cities <= 200
				}
			}
			1 = {
				modifier = {
					add = 1
					stability >= 75
				}
				modifier = {
					add = 1
					scope:new_holding_governorship = {
						has_variable = governorship_owner
						var:governorship_owner = {
							wealth >= 500
						}
					}
				}
				modifier = {
					add = 1
					scope:new_holding_governorship = {
						has_variable = governorship_owner
						var:governorship_owner = {
							wealth >= 2000
						}
					}
				}
				modifier = {
					add = 1
					scope:new_holding_governorship = {
						has_variable = governorship_owner
						var:governorship_owner = {
							wealth >= 5000
						}
					}
				}
				modifier = {
					add = 1
					scope:new_holding_governorship = {
						has_variable = governorship_owner
						var:governorship_owner = {
							wealth >= 10000
						}
					}
				}
				modifier = {
					add = 2
					num_of_cities >= 1000
				}
				modifier = {
					add = 2
					num_of_cities >= 2000
				}
				modifier = {
					factor = 2
					has_country_modifier = solidus_introduced
				}
				modifier = {
					factor = 2
					has_law = decentralized_administration_law
				}
				random_owned_province = {
					limit = {
						governorship = scope:new_holding_governorship
						NOT = {
							exists = holding_owner
						}
					}
					weight = {
						modifier = {
							factor = 10
							any_neighbor_province = {
								holding_owner = scope:new_holding_governorship.var:governorship_owner
							}
						}
					}
					save_scope_as = new_holding_target
				}
				scope:new_holding_governorship.var:governorship_owner = {
					add_gold = -100
					add_holding = scope:new_holding_target
				}
				if = { #chance for another
					limit = {
						scope:new_holding_governorship = {
							has_variable = governorship_owner
							var:governorship_owner = {
								wealth >= 500
							}
						}
					}
					random_list = {
						9 = {
	
						}
						1 = {
							modifier = {
								add = 1
								num_of_cities >= 1000
							}
							modifier = {
								add = 1
								num_of_cities >= 2000
							}
							modifier = {
								add = 1
								scope:new_holding_governorship = {
									has_variable = governorship_owner
									var:governorship_owner = {
										wealth >= 2000
									}
								}
							}
							modifier = {
								add = 1
								scope:new_holding_governorship = {
									has_variable = governorship_owner
									var:governorship_owner = {
										wealth >= 5000
									}
								}
							}
							modifier = {
								add = 1
								scope:new_holding_governorship = {
									has_variable = governorship_owner
									var:governorship_owner = {
										wealth >= 10000
									}
								}
							}
							modifier = {
								factor = 2
								has_country_modifier = solidus_introduced
							}
							modifier = {
								factor = 2
								has_law = decentralized_administration_law
							}
							random_owned_province = {
								limit = {
									governorship = scope:new_holding_governorship
									NOT = {
										exists = holding_owner
									}
								}
								weight = {
									modifier = {
										factor = 10
										any_neighbor_province = {
											holding_owner = scope:new_holding_governorship.var:governorship_owner
										}
									}
								}
								save_scope_as = new_holding_target
							}
							scope:new_holding_governorship.var:governorship_owner = {
								add_gold = -200
								add_holding = scope:new_holding_target
							}
	
						}
					}
				}
				
			}
		}
	}
}


c3rd_holding_tax_evasion = { #when tax evasion is on
	trigger = {
		has_land = yes
		has_variable = land_tax_evasion_authorized
		any_governorships = { #check available governorship (thus owner)
			exists = governor
			governor = {
				is_ruler = no
			}
			any_governorship_state = {
				any_state_province = {
					NOT = {
						exists = holding_owner
					}
				}
			}
		}
	}
	effect = {

        every_governorships = {
            limit = {
				exists = governor
				governor = {
					is_ruler = no
					OR = {
						corruption > 30
						loyalty < 50
					}
				}
				any_governorship_state = {
					any_state_province = {
						NOT = {
							exists = holding_owner
						}
					}
				}
				var:governorship_owner = {
					wealth >= 50
				}
            }
            save_scope_as = new_holding_governorship
			random_list = { #base 16% up 82%
				5 = {
				}
				1 = {
					modifier = {
						add = 1
						owner = {stability >= 75}
					}
					modifier = {
						add = 1
						governor = {
							wealth >= 500
						}
					}
					modifier = {
						add = 1
						governor = {
							wealth >= 2000
						}
					}
					modifier = {
						add = 1
						governor = {
							wealth >= 5000
						}
					}
					modifier = {
						add = 1
						governor = {
							wealth >= 10000
						}
					}
					modifier = {
						factor = 2
						governor = {
							corruption > 50
						}
					}
					modifier = {
						factor = 2
						governor = {
							corruption > 75
						}
					}
					random_governorship_state = {
						limit = {
							any_state_province = {
								NOT = {
									exists = holding_owner
								}
							}
						}
						random_state_province = {
							limit = {
								NOT = {
									exists = holding_owner
								}
							}
							weight = {
								modifier = {
									factor = 10
									any_neighbor_province = {
										holding_owner = scope:new_holding_governorship.var:governorship_owner
									}
								}
							}
							save_scope_as = new_holding_target
							governor = {
								add_gold = -50
								add_holding = scope:new_holding_target
							}
						}
					}
				}
			}
        }
	}
}

c3rd_variables_clear = {
	effect = {
		every_country = {
			limit = {
				has_variable = owner_from_another_empire
				OR = {
					var:owner_from_another_empire = {
						is_alive = no
					}
					has_land = no
				}
				
			}
			remove_variable = owner_from_another_empire
		}
		random_subject = {
			limit = {
				is_subject_type = autonomous_domain
				NOT = {has_variable = owner_from_another_empire}
				has_land = yes
			}
			save_scope_as = subject_without_owner
			root = {
				trigger_event = {
					id = c3rd_other_events.88
					days = { 10 100}
				}
			}
		}
		every_subject = {
			limit = {
				is_subject_type = autonomous_domain
				has_variable = owner_from_another_empire
				has_land = yes
				var:owner_from_another_empire = {
					NOT = {employer = root}
					exists = family
					family = {
						any_family_member = {
							employer = root
							is_head_of_family = yes
						}
					}
				}
			}
			var:owner_from_another_empire = {
				family = {
					head_of_family = {
						save_scope_as = owner_target
					}
				}
			}
			remove_variable = owner_from_another_empire
			set_variable = {
				name = owner_from_another_empire
				value = scope:owner_target
			}
			scope:owner_target = {
				recalculate_ownership_char = yes
			}
		}
		random_subject = {
			limit = {
				is_subject_type = autonomous_domain
				has_variable = owner_from_another_empire
				has_land = yes
				var:owner_from_another_empire = {
					NOT = {employer = root}
				}
			}

			save_scope_as = subject_with_foreign_owner
			root = {
				trigger_event = {
					id = c3rd_other_events.89
					days = { 10 100}
				}
			}
		}
		if = { #2 domains of same guy
			limit = {
				any_character = {
					save_temporary_scope_as = tmp_char
					employer = {
						any_subject = {
							count >= 2
							has_variable = owner_from_another_empire
							is_subject_type = autonomous_domain
							var:owner_from_another_empire = scope:tmp_char
						}
					}
				}
			}
			random_character = {
				limit = {
					save_temporary_scope_as = tmp_char
					employer = {
						any_subject = {
							count >= 2
							has_variable = owner_from_another_empire
							is_subject_type = autonomous_domain
							var:owner_from_another_empire = scope:tmp_char
						}
					}
				}
				save_scope_as = dual_owner
			}
			random_subject = {
				limit = {
					has_variable = owner_from_another_empire
					is_subject_type = autonomous_domain
					var:owner_from_another_empire = scope:dual_owner
				}
				save_scope_as = domain_1
			}
			random_subject = {
				limit = {
					has_variable = owner_from_another_empire
					is_subject_type = autonomous_domain
					var:owner_from_another_empire = scope:dual_owner
					NOT = {this = scope:domain_1}
				}
				save_scope_as = domain_2
			}
			scope:domain_2 = {
				remove_variable = owner_from_another_empire
				every_owned_province = {
					set_owned_by = scope:domain_1
				}
			}
		}
	}
}


c3rd_political_general_rampup = { #if general with political power and uunloyal, tick the unworthy leader and try to coup
	trigger = {
        NOR = {
            has_country_modifier = military_anarchy
            has_variable = recent_military_anarchy
            has_variable = on_going_rep_thingy
            has_country_modifier = political_unstability
        }
	}
	effect = {
		if = {
			limit = {
				any_character = {
					has_character_modifier = political_power_character
					is_alive = yes
					is_ruler = no
					NOT = {
						is_friend = ruler
					}
					loyalty < 33
					loyalty >= 15
					is_general = yes
				}
			}
			random_list = {
				50 = {}
				50 = {
					if = {
						limit = { has_variable = unworthy_leader}
						change_variable = {
							name = unworthy_leader
							add = 1
						}
					}
					else = {
						set_variable = {
							name = unworthy_leader
							value = 1
						}
					}
				}
			}
		}
		else_if = {
			limit = {
				any_character = {
					has_character_modifier = political_power_character
					is_alive = yes
					is_ruler = no
					NOT = {
						is_friend = ruler
					}
					loyalty < 15
					is_general = yes
				} 
			}
			if = {
				limit = { has_variable = unworthy_leader}
				change_variable = {
					name = unworthy_leader
					add = 1
				}
			}
			else = {
				set_variable = {
					name = unworthy_leader
					value = 1
				}
			}
		}
		if = {
			limit = { 
				any_character = {
					has_character_modifier = political_power_character
					is_alive = yes
					is_ruler = no
					NOT = {
						is_friend = ruler
					}
					loyalty < 33
					is_general = yes
				}
			}
			random_list = {
                20 = {
                    modifier = {
                        add = 20
                        has_variable = unworthy_leader
                        var:unworthy_leader <= 2
                    }
                    modifier = {
                        add = 2
                        legitimacy >= 85
                    }
					modifier = {
						factor = 2
						has_law = constantine_reform_law
						has_law = decentralized_administration_law
					}
                }
                1 = {
                    modifier = {
                        add = var:unworthy_leader
                        has_variable = unworthy_leader
                    }
                    modifier = {
                        add = 1
                        legitimacy < 50
                    }
                    modifier = {
                        add = 1
                        legitimacy < 25
                    }
                    modifier = {
                        add = 2
                        legitimacy < 0
                    }
                    modifier = {
                        add = 2
                        stability < 25
                    }
                    trigger_event = {
                        id = c3rd_events.9
                        days = 15
                    }
                }
            }
		}
	}
}