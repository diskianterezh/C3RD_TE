#mod values

num_of_pops_integrated = {
	value = 0
	ROOT = {
		every_integrated_culture = {
			add = country_culture_pop_count
		}
	}
}


num_of_pops_unintegrated = {
	value = 0
	ROOT = {
		every_country_culture = {
			limit = {
				is_integrated = no
				NOT = {has_pop_type_right = slaves}
			}
			add = country_culture_pop_count
		}
	}
}


num_of_pops_slaves = {
	value = 0
	ROOT = {
		every_country_culture = {
			limit = {
				is_integrated = no
				has_pop_type_right = slaves
			}
			add = country_culture_pop_count
		}
	}
}

num_of_subject_pops = {
	value = 0
	
	every_subject = {
		add = country_population
	}
}

half_of_deflation = {
	value = 0
	if = {
		limit = {
			has_variable = deflation_value
		}
		add = var:deflation_value
		divide = 1.5
	}
}

half_of_silver_value = {
	value = 0
	if = {
		limit = {
			has_variable = silver_unvalue
		}
		add = var:silver_unvalue
		divide = 1.5
	}
}

num_of_pops_noble = {
	value = 0
	ROOT = {
		every_integrated_culture = {
			limit = {
				has_pop_type_right = nobles
			}
			add = country_culture_pop_count
		}
	}
}


noble_country_check = {
	value = num_of_pops_noble
	multiply = 7
}

noble_country_check_italian = {
	value = num_of_pops_noble
	multiply = 6
}

noble_country_check_resolve = {
	value = num_of_pops_noble
	multiply = 5
}

noble_country_check_a_lot = {
	value = num_of_pops_noble
	multiply = 9
}

c3rd_base_economic_value = {
	value = 0
	ROOT = {
		every_country_culture = {
			limit = {
				has_pop_type_right = slaves
				is_integrated = no
			}
			add = country_culture_pop_count
			add = country_culture_pop_count
		}
		every_country_culture = {
			limit = {
				NOT = {has_pop_type_right = slaves}
				is_integrated = no
			}
			add = country_culture_pop_count
		}
		add = {
			value = c3rd_gold_number
			multiply = 200
		}
		if = {
			limit = {
				has_law = subject_exploitation_law
			}
			every_subject = {
				add = {
					value = country_population
					multiply = 0.35
				}
			}
		}
		if = { #to let small countries have the mechanics, without crushing
			limit = {
				num_of_cities <= 250
			}
			add = 250
		}
		if = {
			limit = {
				num_of_cities <= 150
			}
			add = 250
		}
	}
}

c3rd_gold_number = {
	value = 0
	ROOT = {
		every_governorships = {
			every_governorship_state = {
				if = {
					limit = {
						trade_good_surplus = { target = precious_metals value > 0 }
						trade_good_surplus = { target = precious_metals value <= 1 }
					}
					add = 1
				}
				else_if = {
					limit = {
						trade_good_surplus = { target = precious_metals value > 1 }
						trade_good_surplus = { target = precious_metals value <= 2 }
					}
					add = 2
				}
				else_if = {
					limit = {
						trade_good_surplus = { target = precious_metals value > 2 }
						trade_good_surplus = { target = precious_metals value <= 3 }
					}
					add = 3
				}
				else_if = {
					limit = {
						trade_good_surplus = { target = precious_metals value > 3 }
						trade_good_surplus = { target = precious_metals value <= 4 }
					}
					add = 4
				}
				else_if = {
					limit = {
						trade_good_surplus = { target = precious_metals value > 4 }
						trade_good_surplus = { target = precious_metals value <= 5 }
					}
					add = 5
				}
				else_if = {
					limit = {
						trade_good_surplus = { target = precious_metals value > 5 }
						trade_good_surplus = { target = precious_metals value <= 6 }
					}
					add = 6
				}
				else_if = {
					limit = {
						trade_good_surplus = { target = precious_metals value > 6 }
						trade_good_surplus = { target = precious_metals value <= 7 }
					}
					add = 7
				}
				else_if = {
					limit = {
						trade_good_surplus = { target = precious_metals value > 7 }
					}
					add = 8
				}
			}
		}
	}

}

#the various economic value decreasing with time is here to reprsent the popoulation reluctant to pay taxes with time - thus needing more slaves/precious metals
c3rd_economic_0_value = {
	value = c3rd_base_economic_value
	multiply = 3.5
	ROOT = {
		divide = country_population
	}
}

c3rd_economic_1_value = {
	value = c3rd_base_economic_value
	multiply = 3
	ROOT = {
		divide = country_population
	}
}

c3rd_economic_2_value = {
	value = c3rd_base_economic_value
	multiply = 2.7
	ROOT = {
		divide = country_population
	}
}


c3rd_economic_3_value = {
	value = c3rd_base_economic_value
	multiply = 2.4
	ROOT = {
		divide = country_population
	}
}
c3rd_economic_4_value = {
	value = c3rd_base_economic_value
	multiply = 2.1
	ROOT = {
		divide = country_population
	}
}
c3rd_economic_5_value = {
	value = c3rd_base_economic_value
	multiply = 1.9
	ROOT = {
		divide = country_population
	}
}
c3rd_economic_6_value = {
	value = c3rd_base_economic_value
	multiply = 1.7
	ROOT = {
		divide = country_population
	}
}
c3rd_economic_7_value = {
	value = c3rd_base_economic_value
	multiply = 1.55
	ROOT = {
		divide = country_population
	}
}
c3rd_economic_8_value = {
	value = c3rd_base_economic_value
	multiply = 1.4
	ROOT = {
		divide = country_population
	}
}
c3rd_economic_9_value = {
	value = c3rd_base_economic_value
	multiply = 1.25
	ROOT = {
		divide = country_population
	}
}
c3rd_economic_10_value = {
	value = c3rd_base_economic_value
	multiply = 1.15
	ROOT = {
		divide = country_population
	}
}
c3rd_economic_11_value = {
	value = c3rd_base_economic_value
	multiply = 1.05
	ROOT = {
		divide = country_population
	}
}
c3rd_economic_12_value = {
	value = c3rd_base_economic_value
	multiply = 0.95
	ROOT = {
		divide = country_population
	}
}
c3rd_economic_13_value = {
	value = c3rd_base_economic_value
	multiply = 0.9
	ROOT = {
		divide = country_population
	}
}
c3rd_economic_14_value = {
	value = c3rd_base_economic_value
	multiply = 0.85
	ROOT = {
		divide = country_population
	}
}
c3rd_economic_15_value = {
	value = c3rd_base_economic_value
	multiply = 0.8
	ROOT = {
		divide = country_population
	}
}

c3rd_economic_factor = {
	value = 2
	if = {
		limit = {
			NOT = {has_global_variable = is_playing_invictus}
		}
		add = -2 #without Invictus, the assimilation is faster
	}
	if = {
		limit = {
			root.culture_group = culture_group:latin
		}
		add = 1 #fuck Rome :p
	}
	if = {
		limit = {
			current_date >= 1200.1.1
		}
		add = 1
	}
	if = {
		limit = {
			current_date >= 1100.1.1
		}
		add = 1
	}
	if = {
		limit = {
			current_date >= 1000.1.1
		}
		add = 1
	}
	if = {
		limit = {
			current_date >= 900.1.1
		}
		add = 1
	}
	if = {
		limit = {
			current_date >= 800.1.1
		}
		add = 1
	}
	if = {
		limit = {
			has_country_modifier = citizen_exemption_from_census_tax
		}
		add = 2
	}
	if = {
		limit = {
			has_country_modifier = aristocratic_exemptions
		}
		add = 1
	}
	if = {
		limit = {
			has_country_modifier = military_advantages
		}
		add = 1
	}
	if = {
		limit = {
			has_country_modifier = tax_inspection
		}
		add = -2
	}
	if = {
		limit = {
			has_country_modifier = monetary_consolidation_sol
		}
		add = -2
	}
	if = {
		limit = {
			has_country_modifier = aristocratic_reforms
		}
		add = -2
	}
	if = {
		limit = {
			has_country_modifier = political_unstability
		}
		add = 1
	}
	if = {
		limit = {
			has_law = second_reform_law
		}
		add = -1
	}
	if = { #added to reduce the vicious snowball
		limit = {
			has_country_modifier = high_deflation
		}
		add = -1
	}
	if = { #same
		limit = {
			has_country_modifier = high_monetary_crash
		}
		add = -1
	}
	if = { #split
		limit = {
			has_country_modifier = divided_empire
		}
		add = -2
	}
	if = {
		limit = {
			num_of_cities <= 200
		}
		add = -1
	}
	if = {
		limit = {
			num_of_cities >= 1000
		}
		add = 1
	}
	if = {
		limit = {
			num_of_cities >= 2000
		}
		add = 1
	}
	if = {
		limit = {
			num_of_cities >= 3000
		}
		add = 1
	}
	if = {
		limit = {
			num_of_cities >= 5000
		}
		add = 1
	}
	if = {
		limit = {
			num_of_cities <= 500
		}
		add = -2
	}
	if = {
		limit = {
			num_of_cities <= 400
		}
		add = -1
	}
	if = {
		limit = {
			num_of_cities <= 300
		}
		add = -1
	}
	if = {
		limit = {
			num_of_cities <= 200
		}
		add = -1
	}
	#epidemy penalty
	if = {
		limit = {
			OR = {
				has_variable = antonine_plague_country_outbreak
				has_variable = antonine_plague_country_quarantine
				has_variable = cyprian_plague_country_outbreak
				has_variable = cyprian_plague_country_quarantine
			}
		}
		add = 1
	}

}

c3rd_economic_value = {
	if = {
		limit = {
			c3rd_economic_factor <= 0
		}
		value = c3rd_economic_0_value
	}
	else_if = {
		limit = {
			c3rd_economic_factor = 1
		}
		value = c3rd_economic_1_value
	}
	else_if = {
		limit = {
			c3rd_economic_factor = 2
		}
		value = c3rd_economic_2_value
	}
	else_if = {
		limit = {
			c3rd_economic_factor = 3
		}
		value = c3rd_economic_3_value
	}
	else_if = {
		limit = {
			c3rd_economic_factor = 4
		}
		value = c3rd_economic_4_value
	}
	else_if = {
		limit = {
			c3rd_economic_factor = 5
		}
		value = c3rd_economic_5_value
	}
	else_if = {
		limit = {
			c3rd_economic_factor = 6
		}
		value = c3rd_economic_6_value
	}
	else_if = {
		limit = {
			c3rd_economic_factor = 7
		}
		value = c3rd_economic_7_value
	}
	else_if = {
		limit = {
			c3rd_economic_factor = 8
		}
		value = c3rd_economic_8_value
	}
	else_if = {
		limit = {
			c3rd_economic_factor = 9
		}
		value = c3rd_economic_9_value
	}
	else_if = {
		limit = {
			c3rd_economic_factor = 10
		}
		value = c3rd_economic_10_value
	}
	else_if = {
		limit = {
			c3rd_economic_factor = 11
		}
		value = c3rd_economic_11_value
	}
	else_if = {
		limit = {
			c3rd_economic_factor = 12
		}
		value = c3rd_economic_12_value
	}
	else_if = {
		limit = {
			c3rd_economic_factor = 13
		}
		value = c3rd_economic_13_value
	}
	else_if = {
		limit = {
			c3rd_economic_factor = 14
		}
		value = c3rd_economic_14_value
	}
	else_if = {
		limit = {
			c3rd_economic_factor >= 14
		}
		value = c3rd_economic_15_value
	}
	else = {
		value = c3rd_economic_5_value
	}
}



income_150 = {
	value = has_monthly_income
	multiply = 150
}
income_300 = {
	value = has_monthly_income
	multiply = 300
}

state_freemen = {
	value = 0
	every_state_province = {
		add = num_of_freemen
	}
}
third_of_state_pop = {
	value = 0
	every_state_province = {
		add = total_population
	}
	divide = 3
}

govship_total_pops = {
	value = 0
	every_governorship_state = {
		every_state_province = {
			add = total_population
		}
	}
}

govship_primary_pops = {
	value = 0
	every_governorship_state = {
		every_state_province = {
			every_pops_in_province = {
				limit = {
					pop_culture = root.owner.culture
				}
				add = 1
			}
		}
	}
}

govship_primary_rate = {
	value = govship_primary_pops
	multiply = 100
	divide = govship_total_pops
	round = yes
}

num_vassal_provinces = {
	value = 0
	every_subject = {
		add = {
			value = num_of_cities
			multiply = 3
		}
	}
}

region_owned_provinces = {
	value = 0
	every_governorship_state = {
		every_state_province = {
			add = 1
		}
	}
	min = 1

}

region_control_value = {
	value = 0
	every_governorship_state = {
		every_state_province = {
			if = {
				limit = {
					exists = holding_owner
					OR = {
						holding_owner = governor
						holding_owner = {
							is_head_of_family = yes
							family = prev.governor.family
						}
					}
				}
				add = 1
			}
		}
	}
	multiply = 100
	divide = region_owned_provinces
	round = yes
	
}
region_control_value_char = {
	value = 0
	every_governorship_state = {
		every_state_province = {
			if = {
				limit = {
					exists = holding_owner
					holding_owner = scope:owner_tmp_check
				}
				add = 1
			}
		}
	}
	multiply = 100
	divide = region_owned_provinces
	round = yes
	
}

region_control_value_owner = {
	value = 0
	if = {
		limit = {
			has_variable = governorship_owner
		}
		every_governorship_state = {
			every_state_province = {
				if = {
					limit = {
						exists = holding_owner
						OR = {
							holding_owner = governorship.var:governorship_owner
							holding_owner = governorship.var:governorship_owner.family.head_of_family
						}
					}
					add = 1
				}
			}
		}
	}
	multiply = 100
	divide = region_owned_provinces
	round = yes
	
}

region_control_value_owner_only = {
	value = 0
	if = {
		limit = {
			has_variable = governorship_owner
		}
		every_governorship_state = {
			every_state_province = {
				if = {
					limit = {
						exists = holding_owner
						holding_owner = governorship.var:governorship_owner
					}
					add = 1
				}
			}
		}
	}
	multiply = 100
	divide = region_owned_provinces
	round = yes

}

country_total_regions = { #scope COUNTRY
	value = 0
	every_governorships = {
		if = {
			limit = { #if the region is a small one, it count as half
				region_owned_provinces < 20
			}
			add = 0.5
		}
		else = {
			add= 1
		}
	}
	every_subject = {
		limit = {
			is_subject_type = autonomous_domain
			has_variable = owner_from_another_empire
		}
		if = {
			limit = {
				num_of_cities < 100
			}
			add = 0.5
		}
		else_if = {
			limit = {
				num_of_cities >= 100
				num_of_cities < 250
			}
			add = 1
		}
		else_if = {
			limit = {
				num_of_cities >= 250
				num_of_cities < 500
			}
			add = 1.5
		}
		else = {
			add = 2
		}
	}
}
country_region_control = { #scope CHAR
	value = 0
	employer = { 
		every_governorships = {
			limit = {
				has_variable = governorship_owner
				var:governorship_owner = scope:influent_character
			}
			if = {
				limit = { #if the region is a small one, it count as half
					region_owned_provinces < 20
				}
				add = 0.5
			}
			else = {
				add= 1
			}
		}
		if = {
			limit = {
				scope:influent_character = {
					is_head_of_family = yes
				}
			}
			every_governorships = {
				limit = {
					has_variable = governorship_owner
					NOT = {var:governorship_owner = scope:influent_character}
					var:governorship_owner = {
						family = scope:influent_character.family
					}
				}
				if = {
					limit = { #if the region is a small one, it count as half
						region_owned_provinces < 20
					}
					add = 0.5
				}
				else = {
					add= 1
				}
			}
		}
		every_subject = {
			limit = {
				is_subject_type = autonomous_domain
				has_variable = owner_from_another_empire
				var:owner_from_another_empire = scope:influent_character
			}
			if = {
				limit = {
					num_of_cities < 100
				}
				add = 0.5
			}
			else_if = {
				limit = {
					num_of_cities >= 100
					num_of_cities < 250
				}
				add = 1
			}
			else_if = {
				limit = {
					num_of_cities >= 250
					num_of_cities < 500
				}
				add = 1.5
			}
			else = {
				add = 2
			}
		}
		multiply = 100
		divide = country_total_regions
	}
	round = yes
}

country_gov_ratio_number = {
	value = 1
	if = {
		limit = { 
			num_of_cities >= 1000
		}
		add = 1
	}
	if = {
		limit = { 
			num_of_cities >= 2000
		}
		add = 1
	}
	if = {
		limit = { 
			num_of_cities >= 5000
		}
		add = 1
	}
	if = {
		limit = { 
			has_variable = landowner_demands
			var:landowner_demands >= 5
		}
		add = 1
	}
	
}

country_gov_ratio_number_minus = { #to get how many governorships should the landowner keep once the domain is created -
	value = country_gov_ratio_number
	add = 1
	if = {
		limit = { 
			num_of_cities >= 1000
		}
		add = 1
	}
	if = {
		limit = { 
			num_of_cities >= 2000
		}
		add = 1
	}
	if = {
		limit = { 
			num_of_cities >= 5000
		}
		add = 1
	}
}
landowner_asked_ratio_number = { #scope country, need asked_landowner
	value = 0
	if = {
		limit = {
			any_governorships = { #check if too small
				count < country_gov_ratio_number
				has_variable = governorship_owner
				var:governorship_owner = scope:asked_landowner
			}
		}
		every_governorships = {
			limit = {
				has_variable = governorship_owner
				var:governorship_owner = scope:asked_landowner
			}
			add = 1
		}
		if = {
			limit = { 
				num_of_cities >= 1000
			}
			add = -1
		}
		if = {
			limit = { 
				num_of_cities >= 2000
			}
			add = -1
		}
		if = {
			limit = { 
				num_of_cities >= 5000
			}
			add = -1
		}
	}
	else_if = {
		limit = {
			any_governorships = { #basically for a small country, he should have 1 more governorships than domain gov; 1000+ 2 more, 2000+ 3 more, ect... this to keep their power in a big country
				count < country_gov_ratio_number_minus
				has_variable = governorship_owner
				var:governorship_owner = scope:asked_landowner
			}
		}
		add = country_gov_ratio_number
		if = {
			limit = { 
				num_of_cities >= 1000
			}
			add = -1
		}
		if = {
			limit = { 
				num_of_cities >= 2000
			}
			add = -1
		}
		if = {
			limit = { 
				num_of_cities >= 5000
			}
			add = -1
		}

	}
	else = {
		add = country_gov_ratio_number
	}
	min = 1

}

subject_partition_ratio = {#subject scope
	value = 0
	add = num_of_provinces
	divide = 3
	ceiling = yes
}

subject_third_cities = {
	value = 0
	add = num_of_cities
	divide = 3 
	ceiling = yes
}

owned_governorship_num_of_cities = { #scope CHAR need a tmp_owner char scope
	value = 0
	employer = {
		every_owned_province = {
			limit = {
				governorship = {
					has_variable = governorship_owner
					var:governorship_owner = scope:tmp_owner
				}
			}
			add = 1
		}
	}

}

owned_domain_num_of_cities = {#scope CHAR need a tmp_owner char scope
	value = 0
	employer = {
		every_subject = {
			limit = {
				has_variable = owner_from_another_empire
				is_subject_type = autonomous_domain
				var:owner_from_another_empire = scope:tmp_owner
			}
			every_owned_province = {
				add = 1
			}
		}
	}
}

disloyal_country_part = {#scope country
	value = 0
	every_character = {
		limit = {
			has_variable = country_ownership
			loyalty < 33
		}
		add = var:country_ownership
	}
}

c3rd_deflation_increase = {
	value = 0
	if = { #silver law reduce deflation passively
		limit = {
			has_variable = deflation_value
			has_law = monetary_reform_law
		}
		add = -1
	}
	if = { #reduce deflation if economy good
		limit = {
			has_variable = deflation_value
			c3rd_economic_value > 1
			var:deflation_value > 0
		}
		add = -1
	}
	if = { #economy very good
		limit = {
			has_variable = deflation_value
			c3rd_economic_value > 2
			var:deflation_value > 0
		}
		add = -1
	}
	if = { #veryvery good
		limit = {
			has_variable = deflation_value
			c3rd_economic_value > 4
			var:deflation_value > 0
		}
		add = -1
	}
	if = { 
		limit = {
			c3rd_economic_value < 1
			is_tribal = no
			NOT = {has_law = monetary_reform_law}
		}
		add = 1
	}
	if = { 
		limit = {
			c3rd_economic_value < 0.8
			is_tribal = no
			NOT = {has_law = monetary_reform_law}
		}
		add = 1
	}
	if = { 
		limit = {
			c3rd_economic_value < 0.6
			is_tribal = no
			NOT = {has_law = monetary_reform_law}
		}
		add = 1
	}
	if = { 
		limit = {
			c3rd_economic_value < 0.4
			is_tribal = no
			NOT = {has_law = monetary_reform_law}
		}
		add = 1
	}
}


c3rd_silver_increase = {
	value = 0
	if = { #first reduction of the silver unvalue if aurelian
		limit = {
			has_variable = silver_unvalue
			has_law = second_reform_law
			var:silver_unvalue > 0
		}
		add = -2
	}
	if = { #reduction if bartering
		limit = {
			has_variable = silver_unvalue
			has_country_modifier = bartering_authorised
			var:silver_unvalue > 0
		}
		add = -1
	}
	if = { #reduction if silv consolidation (solidus)
		limit = {
			has_variable = silver_unvalue
			has_country_modifier = silver_consolidation_sol
			var:silver_unvalue > 0
		}
		add = -1
	}
	if = { #passive unvalue of silver if silver law
		limit = { 
			has_law = monetary_reform_law
			is_tribal = no
		}
		add = 1
	}
	if = { 
		limit = {
			c3rd_economic_value < 1
			is_tribal = no
			has_law = monetary_reform_law
		}
		add = 1
	}
	if = { 
		limit = {
			c3rd_economic_value < 0.8
			is_tribal = no
			has_law = monetary_reform_law
		}
		add = 1
	}
	if = { 
		limit = {
			c3rd_economic_value < 0.6
			is_tribal = no
			has_law = monetary_reform_law
		}
		add = 1
	}
	if = { 
		limit = {
			c3rd_economic_value < 0.4
			is_tribal = no
			has_law = monetary_reform_law
		}
		add = 1
	}
}


num_govruler_lost = { #scope governorship
	value = 1
	if = {
		limit = {
			owner = {
				has_country_modifier = law_advantages_4
			}
		}
		add = 1
	}
	if = {
		limit = {
			owner = {
				has_country_modifier = law_advantages_5
			}
		}
		add = 2
	}
	if = {
		limit = {
			owner = {
				has_law = decentralized_administration_law
			}
		}
		add = 1
	}
}

country_size_ratio = { #to ask governorships sized with country size
	value = country_gov_ratio_number
	add = 1
	if = {
		limit = { 
			num_of_cities >= 500
		}
		add = 1
	}
	if = {
		limit = { 
			num_of_cities >= 1000
		}
		add = 1
	}
	if = {
		limit = { 
			num_of_cities >= 2000
		}
		add = 1
	}
	if = {
		limit = { 
			num_of_cities >= 3000
		}
		add = 1
	}
}

legion_unit_neutral_count = {
	value = 0
	every_legion_unit = {
		limit = {
			commander = {
				NOR = {
					is_friend = root.current_ruler
					loyalty >= 75
				}
			}
		}
		add = unit_size
	}
}

political_influence_event_13 = {
    value = 30
	ordered_governorships = {
		limit = {
			exists = governor
			governor = {
				NOT = {
					family = root.current_ruler.family
				}
			}
			NOT = {has_variable = governorship_owner}
			region_control_value_char > 20 #ruler have 20% holdings
		}
		add = 10
	}
    multiply = -1
}

political_influence_reclaim = {
	value = 15
	if = {
		limit = {
			has_country_modifier = law_advantages_1
		}
		add = 2
	}
	else_if = {
		limit = {
			has_country_modifier = law_advantages_2
		}
		add = 5
	}
	else_if = {
		limit = {
			has_country_modifier = law_advantages_3
		}
		add = 10
	}
	else_if = {
		limit = {
			has_country_modifier = law_advantages_4
		}
		add = 15
	}
	else_if = {
		limit = {
			has_country_modifier = law_advantages_5
		}
		add = 20
	}
	if = {
		limit = {
			has_law = decentralized_administration_law
		} 
		add = 10
	}
	multiply = -1
}

political_influence_global_ratio_price = {
    value = 50
    if = {
        limit = {
            scope:owner_overtake_char = {
                has_character_modifier = major_influence_aristocrat
            }
        }
        add = 50
    }
    if = {
        limit = {
            scope:owner_overtake_char = {
                is_head_of_family = yes
            }
        }
        add = 25
    }
    if = {
        limit = {
            scope:owner_overtake_char = {
                has_character_modifier = political_power_character
            }
        }
        add = 50
    }
    root={
		every_character = {
        	limit = {
            	NOT = {this = scope:owner_overtake_char}
            	OR = {
                	has_office = yes
                	is_head_of_family = yes
            	}
				OR = {
            		loyalty < 50
					has_variable = head_intent_disloyal
				}
				NOT = {has_variable = head_intent_loyal}
        	}
        	add = 10
    	}
		every_character = {
        	limit = {
				has_variable = head_intent_loyal
        	}
        	add = -20
    	}
	}
    multiply = -1
}

count_reclaim = {
	value = 5
	if = {
		limit = {
			has_country_modifier = law_advantages_2
		}
		add = 1
	}
	else_if = {
		limit = {
			has_country_modifier = law_advantages_3
		}
		add = 2
	}
	else_if = {
		limit = {
			has_country_modifier = law_advantages_4
		}
		add = 3
	}
	else_if = {
		limit = {
			has_country_modifier = law_advantages_5
		}
		add = 4
	}
	if = {
		limit = {
			has_law = decentralized_administration_law
		} 
		add = 2
	}
}

has_many_bloodlines = { #scope character
	value = 0
	if = {
		limit = {
			has_trait = alcimachid
		}
		add = 1
	}
	if = {
		limit = {
			has_trait = antigonids
		}
		add = 1
	}
	if = {
		limit = {
			has_trait = antipatrid
		}
		add = 1
	}
	if = {
		limit = {
			has_trait = argeads
		}
		add = 1
	}
	if = {
		limit = {
			has_trait = lagids
		}
		add = 1
	}
	if = {
		limit = {
			has_trait = seleucids
		}
		add = 1
	}
	if = {
		limit = {
			has_trait = aeacidae
		}
		add = 1
	}
	if = {
		limit = {
			has_trait = agiad
		}
		add = 1
	}
	if = {
		limit = {
			has_trait = achaemenid
		}
		add = 1
	}
	if = {
		limit = {
			has_trait = maurya
		}
		add = 1
	}
	if = {
		limit = {
			has_trait = zadok
		}
		add = 1
	}
	if = {
		limit = {
			has_trait = agathocles
		}
		add = 1
	}
	if = {
		limit = {
			has_trait = orontid
		}
		add = 1
	}
	if = {
		limit = {
			has_trait = atropates
		}
		add = 1
	}
	if = {
		limit = {
			has_trait = barca
		}
		add = 1
	}
	if = {
		limit = {
			has_trait = arsaces
		}
		add = 1
	}
	if = {
		limit = {
			has_trait = spartocid
		}
		add = 1
	}
	if = {
		limit = {
			has_trait = sophytid
		}
		add = 1
	}
	if = {
		limit = {
			has_trait = diodotus
		}
		add = 1
	}
	if = {
		limit = {
			has_trait = brennus
		}
		add = 1
	}
	if = {
		limit = {
			has_trait = illyrius
		}
		add = 1
	}
	if = {
		limit = {
			has_trait = ashokalegendary
		}
		add = 1
	}
	if = {
		limit = {
			has_trait = pyrrhuslegendary
		}
		add = 1
	}
	if = {
		limit = {
			has_trait = chandraguptalegendary
		}
		add = 1
	}
	if = {
		limit = {
			has_trait = claudii
		}
		add = 1
	}
	if = {
		limit = {
			has_trait = cornelii
		}
		add = 1
	}
	if = {
		limit = {
			has_trait = fabii
		}
		add = 1
	}
	if = {
		limit = {
			has_trait = demosthenid
		}
		add = 1
	}
	if = {
		limit = {
			has_trait = mithridates
		}
		add = 1
	}
	if = {
		limit = {
			has_trait = superbus
		}
		add = 1
	}
	if = {
		limit = {
			has_trait = vercingetorix
		}
		add = 1
	}
	if = {
		limit = {
			has_trait = chola
		}
		add = 1
	}
	if = {
		limit = {
			has_trait = pandya
		}
		add = 1
	}
	if = {
		limit = {
			has_trait = chera
		}
		add = 1
	}
	if = {
		limit = {
			has_trait = kalinga
		}
		add = 1
	}
	if = {
		limit = {
			has_trait = blood_of_david
		}
		add = 1
	}
	if = {
		limit = {
			has_trait = magonid
		}
		add = 1
	}
	if = {
		limit = {
			has_trait = dido
		}
		add = 1
	}
	if = {
		limit = {
			has_trait = blood_of_aratus
		}
		add = 1
	}
	if = {
		limit = {
			has_trait = blood_of_menander
		}
		add = 1
	}
	if = {
		limit = {
			has_trait = blood_of_bharata
		}
		add = 1
	}
	if = {
		limit = {
			has_trait = blood_of_porus
		}
		add = 1
	}
	if = {
		limit = {
			has_trait = blood_of_vijaya
		}
		add = 1
	}
	if = {
		limit = {
			has_trait = blood_of_zipoetes
		}
		add = 1
	}
	if = {
		limit = {
			has_trait = blood_of_pharnavazid
		}
		add = 1
	}
	if = {
		limit = {
			has_trait = blood_of_forcos
		}
		add = 1
	}
	if = {
		limit = {
			has_trait = blood_of_obodid
		}
		add = 1
	}
	if = {
		limit = {
			has_trait = blood_of_aretid
		}
		add = 1
	}
	if = {
		limit = {
			has_trait = pharnabazid
		}
		add = 1
	}
	if = {
		limit = {
			has_trait = aeetes
		}
		add = 1
	}
	if = {
		limit = {
			has_trait = blood_of_midas
		}
		add = 1
	}
	if = {
		limit = {
			has_trait = eumenid
		}
		add = 1
	}
	if = {
		limit = {
			has_trait = attalid
		}
		add = 1
	}
	if = {
		limit = {
			has_trait = blood_of_shaushtatar
		}
		add = 1
	}
	if = {
		limit = {
			has_trait = blood_of_pandava
		}
		add = 1
	}
	if = {
		limit = {
			has_trait = blood_of_arhan
		}
		add = 1
	}
	if = {
		limit = {
			has_trait = eurypontid
		}
		add = 1
	}
	if = {
		limit = {
			has_trait = balbid
		}
		add = 1
	}
	if = {
		limit = {
			has_trait = saba
		}
		add = 1
	}
	if = {
		limit = {
			has_trait = ateas
		}
		add = 1
	}
	if = {
		limit = {
			has_trait = blood_of_teres
		}
		add = 1
	}
	if = {
		limit = {
			has_trait = teucer
		}
		add = 1
	}
	if = {
		limit = {
			has_trait = blood_of_pylaemenes
		}
		add = 1
	}
	if = {
		limit = {
			has_trait = mahout
		}
		add = 1
	}
	if = {
		limit = {
			has_trait = arganthonios
		}
		add = 1
	}
	if = {
		limit = {
			has_trait = antenorid
		}
		add = 1
	}
	if = {
		limit = {
			has_trait = blood_of_albion_kings
		}
		add = 1
	}
	if = {
		limit = {
			has_trait = hecatomnid
		}
		add = 1
	}
	if = {
		limit = {
			has_trait = ariovistid
		}
		add = 1
	}
	if = {
		limit = {
			has_trait = oxyartid
		}
		add = 1
	}
}